{"ast":null,"code":"var _jsxFileName = \"/Users/dimitritsioutsiopoulos/Desktop/git.hub/reactpractice/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Alert from \"../components/Alert\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      breeds: [],\n      results: [],\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getDogsOfBreed(this.state.search).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n\n        this.setState({\n          results: res.data.message,\n          error: \"\"\n        });\n      }).catch(err => this.setState({\n        error: err.message\n      }));\n    };\n  }\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getBaseBreedsList().then(res => this.setState({\n      breeds: res.data.message\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        minHeight: \"80%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Search By Breed!\"), React.createElement(Alert, {\n      type: \"danger\",\n      style: {\n        opacity: this.state.error ? 1 : 0,\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.error), React.createElement(SearchForm, {\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      breeds: this.state.breeds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(SearchResults, {\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/dimitritsioutsiopoulos/Desktop/git.hub/reactpractice/src/pages/Search.js"],"names":["React","Component","API","Container","SearchForm","SearchResults","Alert","Search","state","search","breeds","results","error","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getDogsOfBreed","then","res","data","status","Error","message","catch","err","componentDidMount","getBaseBreedsList","console","log","render","minHeight","opacity","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BO,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,KAAK,EAAE;AAJD,KADqB;;AAAA,SAe7BC,iBAf6B,GAeTC,KAAK,IAAI;AAC3B,WAAKC,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KAjB4B;;AAAA,SAmB7BC,gBAnB6B,GAmBVJ,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AACAjB,MAAAA,GAAG,CAACkB,cAAJ,CAAmB,KAAKZ,KAAL,CAAWC,MAA9B,EACGY,IADH,CACQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,OAAxB,EAAiC;AAC/B,gBAAM,IAAIC,KAAJ,CAAUH,GAAG,CAACC,IAAJ,CAASG,OAAnB,CAAN;AACD;;AACD,aAAKX,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAEW,GAAG,CAACC,IAAJ,CAASG,OAApB;AAA6Bd,UAAAA,KAAK,EAAE;AAApC,SAAd;AACD,OANH,EAOGe,KAPH,CAOSC,GAAG,IAAI,KAAKb,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEgB,GAAG,CAACF;AAAb,OAAd,CAPhB;AAQD,KA7B4B;AAAA;;AAQ7B;AACAG,EAAAA,iBAAiB,GAAG;AAClB3B,IAAAA,GAAG,CAAC4B,iBAAJ,GACGT,IADH,CACQC,GAAG,IAAI,KAAKP,QAAL,CAAc;AAAEL,MAAAA,MAAM,EAAEY,GAAG,CAACC,IAAJ,CAASG;AAAnB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAFhB;AAGD;;AAiBDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,KAAK3B,KAAL,CAAWI,KAAX,GAAmB,CAAnB,GAAuB,CAAlC;AAAqCwB,QAAAA,YAAY,EAAE;AAAnD,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAK5B,KAAL,CAAWI,KAJd,CAFF,EAQE,oBAAC,UAAD;AACE,MAAA,gBAAgB,EAAE,KAAKM,gBADzB;AAEE,MAAA,iBAAiB,EAAE,KAAKL,iBAF1B;AAGE,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWE,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAaE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF,CADF;AAmBD;;AAlD4B;;AAqD/B,eAAeJ,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Alert from \"../components/Alert\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    breeds: [],\n    results: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getBaseBreedsList()\n      .then(res => this.setState({ breeds: res.data.message }))\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getDogsOfBreed(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Search By Breed!</h1>\n          <Alert\n            type=\"danger\"\n            style={{ opacity: this.state.error ? 1 : 0, marginBottom: 10 }}\n          >\n            {this.state.error}\n          </Alert>\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            breeds={this.state.breeds}\n          />\n          <SearchResults results={this.state.results} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}