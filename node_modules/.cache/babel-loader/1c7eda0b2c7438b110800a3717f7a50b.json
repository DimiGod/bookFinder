{"ast":null,"code":"var _jsxFileName = \"/Users/dimitritsioutsiopoulos/Desktop/git.hub/reactpractice/src/App.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport API from \"./utils/API\";\nimport { BookList, BookListItem } from \"./components/BookList\";\nimport { Container, Row, Col } from \"./components/Grid\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      bookSearch: \"\"\n    };\n\n    this.handleInputChange = event => {\n      // Destructure the name and value properties off of event.target\n      // Update the appropriate state\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      // When the form is submitted, prevent its default behavior, get books update the books state\n      event.preventDefault(); // console.log(this.state.bookSearch);\n\n      API.getBooks(this.state.bookSearch).then(res => this.setState({\n        books: res.data.items\n      })).catch(err => console.log(err));\n    };\n\n    this.saveBook = id => {\n      // console.log(\"id\" + id);\n      if (this.state.books.indexOf(id) === -1) {\n        console.log(\"if1 \" + id);\n        console.log(this.state.books.indexOf(id));\n        console.log(this.state.books[0]); // app.post(\"/savebook\", this.state.books[0]);\n\n        API.saveBook(this.state.books[0]).then(console.log(\"Done with save book call\")).catch(err => console.log(err));\n      } else {\n        console.log(\"else \" + id);\n      }\n    };\n  }\n\n  // API.saveBook({\n  //   title: this.state.title,\n  //   author: this.state.author,\n  //   synopsis: this.state.synopsis\n  // })\n  //   .then(res => this.loadBooks())\n  //   .catch(err => console.log(err));\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"xs-9 sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"bookSearch\",\n      value: this.state.bookSearch,\n      onChange: this.handleInputChange,\n      placeholder: \"Search For a Book\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Col, {\n      size: \"xs-3 sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleFormSubmit,\n      type: \"success\",\n      className: \"input-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Search\"))))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, !this.state.books.length ? React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"No Books to Display\") : React.createElement(BookList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.books.map(book => {\n      return React.createElement(BookListItem, {\n        key: book.id,\n        title: book.volumeInfo.title,\n        authors: book.volumeInfo.authors,\n        description: book.volumeInfo.description,\n        thumbnail: book.volumeInfo.imageLinks.thumbnail,\n        href: book.volumeInfo.infoLink,\n        saveBook: this.saveBook,\n        bookid: book.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dimitritsioutsiopoulos/Desktop/git.hub/reactpractice/src/App.js"],"names":["React","Component","Jumbotron","Nav","Input","Button","API","BookList","BookListItem","Container","Row","Col","App","state","books","bookSearch","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","getBooks","then","res","data","items","catch","err","console","log","saveBook","id","indexOf","render","length","map","book","volumeInfo","title","authors","description","imageLinks","thumbnail","infoLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport API from \"./utils/API\";\nimport { BookList, BookListItem } from \"./components/BookList\";\nimport { Container, Row, Col } from \"./components/Grid\";\n\nclass App extends Component {\n  state = {\n    books: [],\n    bookSearch: \"\"\n  };\n\n  handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get books update the books state\n    event.preventDefault();\n    // console.log(this.state.bookSearch);\n    API.getBooks(this.state.bookSearch)\n       .then(res => this.setState({ books: res.data.items }))\n       .catch(err => console.log(err));\n  };\n\n  saveBook = (id) => {\n    // console.log(\"id\" + id);\n    if (this.state.books.indexOf(id) === -1){\n      console.log(\"if1 \" + id);\n      console.log(this.state.books.indexOf(id));\n      console.log(this.state.books[0]);\n      \n      // app.post(\"/savebook\", this.state.books[0]);\n      API.saveBook(this.state.books[0])\n         .then(console.log(\"Done with save book call\"))\n         .catch(err => console.log(err));\n    }\n    else{\n      console.log(\"else \" + id);\n    }\n  };\n\n\n  // API.saveBook({\n  //   title: this.state.title,\n  //   author: this.state.author,\n  //   synopsis: this.state.synopsis\n  // })\n  //   .then(res => this.loadBooks())\n  //   .catch(err => console.log(err));\n\n\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Jumbotron />\n        <Container>\n          <Row>\n            <Col size=\"md-12\">\n              <form>\n                <Container>\n                  <Row>\n                    <Col size=\"xs-9 sm-10\">\n                      <Input\n                        name=\"bookSearch\"\n                        value={this.state.bookSearch}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Search For a Book\"\n                      />\n                    </Col>\n                    <Col size=\"xs-3 sm-2\">\n                      <Button\n                        onClick={this.handleFormSubmit}\n                        type=\"success\"\n                        className=\"input-lg\"\n                      >\n                        Search\n                      </Button>\n                    </Col>\n                  </Row>\n                </Container>\n              </form>\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"xs-12\">\n              {!this.state.books.length ? (\n                <h1 className=\"text-center\">No Books to Display</h1>\n              ) : (\n                <BookList>\n                  {this.state.books.map(book => {\n                    return (\n                      <BookListItem\n                        key={book.id}\n                        title={book.volumeInfo.title}\n                        authors={book.volumeInfo.authors}\n                        description={book.volumeInfo.description}           \n                        thumbnail={book.volumeInfo.imageLinks.thumbnail}\n                        href={book.volumeInfo.infoLink}\n                        saveBook={this.saveBook}\n                        bookid={book.id}\n                      />\n                    );\n                  })}\n                </BookList>\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}